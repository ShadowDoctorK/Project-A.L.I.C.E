//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 01/18/2019 5:27 PM
//Source Journal Line: { "timestamp":"2019-01-18T21:02:06Z", "event":"SquadronStartup", "SquadronName":"OUTCAST ECLIPSE", "CurrentRank":0 }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;

namespace ALICE_Events
{
    public class Event_SquadronStartup : Event_Base
    {
        public Event_SquadronStartup()
        {
            Name = "SquadronStartup";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            //IObjects.Logic_SquadronStartup((SquadronStartup)GetEvent());

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            SquadronStartup Event = (SquadronStartup)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("SquadronName", Event.SquadronName.Variable());
            Variable_Craft("CurrentRank", Event.CurrentRank.Variable());
            #endregion
        }
    }

    #region SquadronStartup Event
    public class SquadronStartup : Base
    {
        public string SquadronName { get; set; }
        public decimal CurrentRank { get; set; }

        public SquadronStartup()
        {
            SquadronName = Default.String;
            CurrentRank = Default.Decimal;
        }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == SquadronStartup)
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.SquadronStartup>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.SquadronStartup.Logic();
// }
