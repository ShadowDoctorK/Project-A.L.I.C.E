//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-30T04:28:32Z", "event":"FSDJump", "StarSystem":"Willapa", "SystemAddress":16063848785345, "StarPos":[-11.68750,-10.81250,65.56250], "SystemAllegiance":"Independent", "SystemEconomy":"$economy_Agri;", "SystemEconomy_Localised":"Agriculture", "SystemSecondEconomy":"$economy_Colony;", "SystemSecondEconomy_Localised":"Colony", "SystemGovernment":"$government_Corporate;", "SystemGovernment_Localised":"Corporate", "SystemSecurity":"$SYSTEM_SECURITY_high;", "SystemSecurity_Localised":"High Security", "Population":3105800092, "Powers":[ "Yuri Grom" ], "PowerplayState":"Exploited", "JumpDist":13.512, "FuelUsed":6.441426, "FuelLevel":22.980717, "Factions":[ { "Name":"Pilots Federation Local Branch", "FactionState":"None", "Government":"Democracy", "Influence":0.000000, "Allegiance":"PilotsFederation" }, { "Name":"Kokojina Jet Federal Limited", "FactionState":"Boom", "Government":"Corporate", "Influence":0.056000, "Allegiance":"Federation", "PendingStates":[ { "State":"Outbreak", "Trend":-1 } ] }, { "Name":"Willapa Resistance", "FactionState":"None", "Government":"Democracy", "Influence":0.102000, "Allegiance":"Independent", "PendingStates":[ { "State":"CivilWar", "Trend":0 } ] }, { "Name":"New Mambojas Labour", "FactionState":"None", "Government":"Democracy", "Influence":0.028000, "Allegiance":"Federation", "PendingStates":[ { "State":"Boom", "Trend":1 } ] }, { "Name":"Crimson Creative Network", "FactionState":"CivilWar", "Government":"Corporate", "Influence":0.137000, "Allegiance":"Federation", "PendingStates":[ { "State":"Boom", "Trend":1 }, { "State":"Famine", "Trend":0 } ], "RecoveringStates":[ { "State":"Outbreak", "Trend":0 } ] }, { "Name":"Willapa Solutions", "FactionState":"Boom", "Government":"Corporate", "Influence":0.413000, "Allegiance":"Independent", "PendingStates":[ { "State":"Outbreak", "Trend":1 } ] }, { "Name":"Willapa Defence Party", "FactionState":"Boom", "Government":"Dictatorship", "Influence":0.102000, "Allegiance":"Independent", "PendingStates":[ { "State":"Outbreak", "Trend":0 }, { "State":"CivilWar", "Trend":0 } ] }, { "Name":"Willapa Drug Empire", "FactionState":"CivilWar", "Government":"Anarchy", "Influence":0.077000, "Allegiance":"Independent", "PendingStates":[ { "State":"Outbreak", "Trend":1 } ], "RecoveringStates":[ { "State":"Boom", "Trend":0 } ] }, { "Name":"Redsheep Corporation", "FactionState":"None", "Government":"Corporate", "Influence":0.085000, "Allegiance":"Independent" } ], "SystemFaction":"Willapa Solutions", "FactionState":"Boom" }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;
using ALICE_EventLogic;

namespace ALICE_Events
{
    public class Event_FSDJump : Event_Base
    {
        public Event_FSDJump()
        {
            Name = "FSDJump";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            Process.FSDJump((FSDJump)GetEvent());

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            FSDJump Event = (FSDJump)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("StarSystem", Event.StarSystem.Variable());
            Variable_Craft("SystemAddress", Event.SystemAddress.Variable());
            //Variable_Craft("StarPos", Event.StarPos.Variable());
            Variable_Craft("SystemAllegiance", Event.SystemAllegiance.Variable());
            Variable_Craft("SystemEconomy", Event.SystemEconomy.Variable());
            Variable_Craft("SystemEconomy_Localised", Event.SystemEconomy_Localised.Variable());
            Variable_Craft("SystemSecondEconomy", Event.SystemSecondEconomy.Variable());
            Variable_Craft("SystemSecondEconomy_Localised", Event.SystemSecondEconomy_Localised.Variable());
            Variable_Craft("SystemGovernment", Event.SystemGovernment.Variable());
            Variable_Craft("SystemGovernment_Localised", Event.SystemGovernment_Localised.Variable());
            Variable_Craft("SystemSecurity", Event.SystemSecurity.Variable());
            Variable_Craft("SystemSecurity_Localised", Event.SystemSecurity_Localised.Variable());
            Variable_Craft("Population", Event.Population.Variable());
            //Variable_Craft("Powers", Event.Powers.Variable());
            Variable_Craft("PowerplayState", Event.PowerplayState.Variable());
            Variable_Craft("JumpDist", Event.JumpDist.Variable());
            Variable_Craft("FuelUsed", Event.FuelUsed.Variable());
            Variable_Craft("FuelLevel", Event.FuelLevel.Variable());
            //Variable_Craft("Factions", Event.Factions.Variable());
            //Variable_Craft("SystemFaction", Event.SystemFaction.Variable());
            //Variable_Craft("FactionState", Event.FactionState.Variable());
            #endregion
        }
    }

    #region FSDJump Event
    public class FSDJump : Base
    {
        public string StarSystem { get; set; }
        public decimal SystemAddress { get; set; }
        public List<decimal> StarPos { get; set; }
        public string SystemAllegiance { get; set; }
        public string SystemEconomy { get; set; }
        public string SystemEconomy_Localised { get; set; }
        public string SystemSecondEconomy { get; set; }
        public string SystemSecondEconomy_Localised { get; set; }
        public string SystemGovernment { get; set; }
        public string SystemGovernment_Localised { get; set; }
        public string SystemSecurity { get; set; }
        public string SystemSecurity_Localised { get; set; }
        public decimal Population { get; set; }
        public List<string> Powers { get; set; }
        public string PowerplayState { get; set; }
        public decimal JumpDist { get; set; }
        public decimal FuelUsed { get; set; }
        public decimal FuelLevel { get; set; }
        public decimal BoostUsed { get; set; }
        public List<Faction> Factions { get; set; }
        public FactionData SystemFaction { get; set; }

        public FSDJump()
        {
            StarSystem = Default.String;
            SystemAddress = Default.Decimal;
            StarPos = new List<decimal>();
            SystemAllegiance = Default.String;
            SystemEconomy = Default.String;
            SystemEconomy_Localised = Default.String;
            SystemSecondEconomy = Default.String;
            SystemSecondEconomy_Localised = Default.String;
            SystemGovernment = Default.String;
            SystemGovernment_Localised = Default.String;
            SystemSecurity = Default.String;
            SystemSecurity_Localised = Default.String;
            Population = Default.Decimal;
            Powers = new List<string>();
            PowerplayState = Default.String;
            JumpDist = Default.Decimal;
            FuelUsed = Default.Decimal;
            FuelLevel = Default.Decimal;
            BoostUsed = Default.Decimal;
            Factions = new List<Faction>();
            SystemFaction = new FactionData();            
        }

        public class Faction : Catch
        {
            public string Name { get; set; }
            public string FactionState { get; set; }
            public string Government { get; set; }
            public decimal Influence { get; set; }
            public string Allegiance { get; set; }
            public string Happiness { get; set; }
            public decimal MyReputation { get; set; }
            public string Happiness_Localised { get; set; }
            public List<States> RecoveringStates { get; set; }
            public List<States> ActiveStates { get; set; }
            public List<States> PendingStates { get; set; }

            public Faction()
            {
                Name = Default.String;
                FactionState = Default.String;
                Government = Default.String;
                Influence = Default.Decimal;
                Allegiance = Default.String;
                Happiness = Default.String;
                Happiness_Localised = Default.String;
                PendingStates = new List<States>();
                RecoveringStates = new List<States>();
                ActiveStates = new List<States>();
            }
        }

        public class States : Catch
        {
            public string State { get; set; }
            public decimal Trend { get; set; }

            public States()
            {
                State = Default.String;
                Trend = Default.Decimal;
            }
        }

        public class FactionData
        {
            public string Name { get; set; }
            public string FactionState { get; set; }

            public FactionData()
            {
                Name = Default.String;
                FactionState = Default.String;
            }
        }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == FSDJump)
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.FSDJump>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }
