//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 4:40 PM
//Source Journal Line: { "timestamp":"2018-10-30T23:00:09Z", "event":"FetchRemoteModule", "StorageSlot":104, "StoredItem":"$int_modulereinforcement_size4_class2_name;", "StoredItem_Localised":"Module Reinforcement", "ServerId":128737277, "TransferCost":329, "TransferTime":463, "Ship":"typex", "ShipID":59 }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;

namespace ALICE_Events
{
    public class Event_FetchRemoteModule : Event_Base
    {
        public Event_FetchRemoteModule()
        {
            Name = "FetchRemoteModule";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            //Custom Logic Here.

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            FetchRemoteModule Event = (FetchRemoteModule)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("StorageSlot", Event.StorageSlot.ToString());
            Variable_Craft("StoredItem", Event.StoredItem.ToString());
            Variable_Craft("StoredItem_Localised", Event.StoredItem_Localised.ToString());
            Variable_Craft("ServerId", Event.ServerId.ToString());
            Variable_Craft("TransferCost", Event.TransferCost.ToString());
            Variable_Craft("TransferTime", Event.TransferTime.ToString());
            Variable_Craft("Ship", Event.Ship.ToString());
            Variable_Craft("ShipID", Event.ShipID.ToString());
            #endregion
        }
    }

    #region FetchRemoteModule Event
    public class FetchRemoteModule : Base
    {
        public decimal StorageSlot { get; set; }
        public string StoredItem { get; set; }
        public string StoredItem_Localised { get; set; }
        public decimal ServerId { get; set; }
        public decimal TransferCost { get; set; }
        public decimal TransferTime { get; set; }
        public string Ship { get; set; }
        public decimal ShipID { get; set; }

        public FetchRemoteModule()
        {
            StorageSlot = Default.Decimal;
            StoredItem = Default.String;
            StoredItem_Localised = Default.String;
            ServerId = Default.Decimal;
            TransferCost = Default.Decimal;
            TransferTime = Default.Decimal;
            Ship = Default.String;
            ShipID = Default.Decimal;
        }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == "FetchRemoteModule")
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.FetchRemoteModule>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }
