//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 4:40 PM
//Source Journal Line: { "timestamp":"2018-10-20T12:28:45Z", "event":"MaterialTrade", "MarketID":3229126144, "TraderType":"manufactured", "Paid":{ "Material":"protoheatradiators", "Material_Localised":"Proto Heat Radiators", "Category":"$MICRORESOURCE_CATEGORY_Manufactured;", "Category_Localised":"Manufactured", "Quantity":6 }, "Received":{ "Material":"heatvanes", "Material_Localised":"Heat Vanes", "Category":"$MICRORESOURCE_CATEGORY_Manufactured;", "Category_Localised":"Manufactured", "Quantity":18 } }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;

namespace ALICE_Events
{
    public class Event_MaterialTrade : Event_Base
    {
        public Event_MaterialTrade()
        {
            Name = "MaterialTrade";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            //Custom Logic Here.

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            MaterialTrade Event = (MaterialTrade)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("MarketID", Event.MarketID.ToString());
            Variable_Craft("TraderType", Event.TraderType.ToString());
            //Variable_Craft("Paid", Event.Paid.ToString());
            //Variable_Craft("Received", Event.Received.ToString());
            #endregion
        }
    }

    #region MaterialTrade Event
    public class MaterialTrade : Base
    {
        public decimal MarketID { get; set; }
        public string TraderType { get; set; }
        public TradeMat Paid { get; set; }
        public TradeMat Received { get; set; }

        public MaterialTrade()
        {
            MarketID = Default.Decimal;
            TraderType = Default.String;
            Paid = new TradeMat();
            Received = new TradeMat();
        }

        public class TradeMat
        {
            public string Material { get; set; }
            public string Material_Localised { get; set; }
            public string Category { get; set; }
            public string Category_Localised { get; set; }
            public decimal Quantity { get; set; }

            public TradeMat()
            {
                Material = Default.String;
                Material_Localised = Default.String;
                Category = Default.String;
                Category_Localised = Default.String;
                Quantity = Default.Decimal;
            }
        }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == "MaterialTrade")
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.MaterialTrade>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }
