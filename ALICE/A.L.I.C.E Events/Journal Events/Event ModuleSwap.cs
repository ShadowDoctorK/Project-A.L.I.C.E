//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-28T15:40:20Z", "event":"ModuleSwap", "MarketID":3221503744, "FromSlot":"Slot08_Size4", "ToSlot":"Slot10_Size3", "FromItem":"$int_cargorack_size3_class1_name;", "FromItem_Localised":"Cargo Rack", "ToItem":"Null", "Ship":"federation_corvette", "ShipID":11 }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Ships_Datalink_Interface;
using ALICE_Internal;

namespace ALICE_Events
{
    public class Event_ModuleSwap : Event_Base
    {
        public Event_ModuleSwap()
        {
            Name = "ModuleSwap";
        }

        public void Logic()
        {
            if (Manager.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            //Custom Logic Here.

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            ModuleSwap Event = (ModuleSwap)Manager.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("MarketID", Event.MarketID.Variable());
            Variable_Craft("FromSlot", Event.FromSlot.Variable());
            Variable_Craft("ToSlot", Event.ToSlot.Variable());
            Variable_Craft("FromItem", Event.FromItem.Variable());
            Variable_Craft("FromItem_Localised", Event.FromItem_Localised.Variable());
            Variable_Craft("ToItem", Event.ToItem.Variable());
            Variable_Craft("Ship", Event.Ship.Variable());
            Variable_Craft("ShipID", Event.ShipID.Variable());
            #endregion
        }
    }

    #region ModuleSwap Event
    public class ModuleSwap : Base
    {
        public decimal MarketID { get; set; }
        public string FromSlot { get; set; }
        public string ToSlot { get; set; }
        public string FromItem { get; set; }
        public string FromItem_Localised { get; set; }
        public string ToItem { get; set; }
        public string Ship { get; set; }
        public decimal ShipID { get; set; }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == ModuleSwap)
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.ModuleSwap>(RawLine);
//     Manager.UpdateEvents(EventName, Event);
//     Manager.Bounty.Logic();
// }
