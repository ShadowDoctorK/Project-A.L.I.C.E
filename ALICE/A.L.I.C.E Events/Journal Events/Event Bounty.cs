//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-12T00:02:53Z", "event":"Bounty", "Rewards":[ { "Faction":"BD+06 5034 Bridge Commodities", "Reward":55800 }, { "Faction":"Cavalry Command of Yuma", "Reward":65260 }, { "Faction":"Revolutionary Lalande 43492 Labour", "Reward":74160 }, { "Faction":"LHS 480 Crimson Natural Group", "Reward":69840 } ], "Target":"python", "TotalReward":265060, "VictimFaction":"Nankul General Holdings", "SharedWithOthers":1 }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using ALICE_Objects;
using ALICE_Internal;
using ALICE_EventLogic;

namespace ALICE_Events
{
    public class Event_Bounty : Event_Base
    {
        public Event_Bounty()
        {
            Name = "Bounty";
        }

        public void Logic()
        {   
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            Process.Bounty((Bounty)GetEvent());

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            Bounty Event = (Bounty)IEvents.GetEvent(Name);

            #region Custom Variables

            #endregion

            #region Event Variables
            Variables.Clear();
            Variable_Craft("Target", Event.Target.Variable());
            Variable_Craft("TotalReward", Event.TotalReward.Variable());
            Variable_Craft("VictimFaction", Event.VictimFaction_Localised.Variable());
            Variable_Craft("Faction", Event.Faction.Variable());
            Variable_Craft("Reward", Event.Reward.Variable());
            #endregion
        }
    }

    #region Bounty Event
    public class Bounty : Base
    {
        public List<BountyReward> Rewards { get; set; }
        public string Target { get; set; }
        public decimal TotalReward { get; set; }
        public string VictimFaction { get; set; }
        public string VictimFaction_Localised { get; set; }
        public decimal SharedWithOthers { get; set; }

        //Target is Skimmer
        public string Faction { get; set; }
        public decimal Reward { get; set; }

        public Bounty()
        {
            Rewards = new List<BountyReward>();
            Target = Default.String;
            TotalReward = Default.Decimal;
            VictimFaction = Default.String;
            VictimFaction_Localised = Default.String;
            SharedWithOthers = Default.Decimal;
            Faction = Default.String;
            Reward = Default.Decimal;
        }

        public class BountyReward : Catch
        {
            public string Faction { get; set; }
            public decimal Reward { get; set; }

            public BountyReward()
            {
                Faction = Default.String;
                Reward = Default.Decimal;
            }
        }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == Bounty)
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.Bounty>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }