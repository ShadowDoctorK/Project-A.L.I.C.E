//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-21T23:45:27Z", "event":"MissionAccepted", "Faction":"Kao Kach Purple Energy PLC", "Name":"Mission_Collect_Industrial", "LocalisedName":"Industry needs 2061 units of Performance Enhancers", "Commodity":"$PerformanceEnhancers_Name;", "Commodity_Localised":"Performance Enhancers", "Count":2061, "DestinationSystem":"HR 8514", "DestinationStation":"Hennen Station", "Expiry":"2018-10-22T23:11:20Z", "Wing":true, "Influence":"Med", "Reputation":"Med", "Reward":14211951, "MissionID":427614351 }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;

namespace ALICE_Events
{
    public class Event_MissionAccepted : Event_Base
    {
        public Event_MissionAccepted()
        {
            Name = "MissionAccepted";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            //Custom Logic Here.

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            MissionAccepted Event = (MissionAccepted)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("Faction", Event.Faction.Variable());
            Variable_Craft("Name", Event.Name.Variable());
            Variable_Craft("LocalisedName", Event.LocalisedName.Variable());
            Variable_Craft("Commodity", Event.Commodity.Variable());
            Variable_Craft("Commodity_Localised", Event.Commodity_Localised.Variable());
            Variable_Craft("Count", Event.Count.Variable());
            Variable_Craft("DestinationSystem", Event.DestinationSystem.Variable());
            Variable_Craft("DestinationStation", Event.DestinationStation.Variable());
            Variable_Craft("Expiry", Event.Expiry.Variable());
            Variable_Craft("Wing", Event.Wing.Variable());
            Variable_Craft("Influence", Event.Influence.Variable());
            Variable_Craft("Reputation", Event.Reputation.Variable());
            Variable_Craft("Reward", Event.Reward.Variable());
            Variable_Craft("MissionID", Event.MissionID.Variable());
            #endregion
        }
    }

    #region MissionAccepted Event
    public class MissionAccepted : Base
    {
        public string Faction { get; set; }
        public string Name { get; set; }
        public string LocalisedName { get; set; }
        public string TargetType { get; set; }
        public string TargetType_Localised { get; set; }
        public string Donation { get; set; }
        public string Commodity { get; set; }
        public string Commodity_Localised { get; set; }
        public decimal Count { get; set; }
        public string TargetFaction { get; set; }
        public decimal KillCount { get; set; }
        public string DestinationSystem { get; set; }
        public string DestinationStation { get; set; }
        public string Target { get; set; }
        public string Target_Localised { get; set; }
        public DateTime Expiry { get; set; }
        public bool Wing { get; set; }
        public string Influence { get; set; }
        public string Reputation { get; set; }
        public decimal Reward { get; set; }
        public decimal MissionID { get; set; }

        public MissionAccepted()
        {
            Faction = Default.String;
            Name = Default.String;
            LocalisedName = Default.String;
            TargetType = Default.String;
            TargetType_Localised = Default.String;
            Donation = Default.String;
            Commodity = Default.String;
            Commodity_Localised = Default.String;
            Count = Default.Decimal;
            TargetFaction = Default.String;
            KillCount = Default.Decimal;
            DestinationSystem = Default.String;
            DestinationStation = Default.String;
            Target = Default.String;
            Target_Localised = Default.String;
            Expiry = Default.DTime;
            Wing = Default.False;
            Influence = Default.String;
            Reputation = Default.String;
            Reward = Default.Decimal;
            MissionID = Default.Decimal;
        }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == MissionAccepted)
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.MissionAccepted>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }
