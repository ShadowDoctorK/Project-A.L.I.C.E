//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-15T00:14:56Z", "event":"Cargo", "Inventory":[ { "Name":"ancientrelic", "Name_Localised":"Ancient Relic", "Count":1, "Stolen":0 }, { "Name":"ancientcasket", "Name_Localised":"Ancient Casket", "Count":2, "Stolen":0 }, { "Name":"ancienttablet", "Name_Localised":"Ancient Tablet", "Count":2, "Stolen":0 }, { "Name":"ancientorb", "Name_Localised":"Ancient Orb", "Count":3, "Stolen":0 }, { "Name":"ancienturn", "Name_Localised":"Ancient Urn", "Count":3, "Stolen":0 }, { "Name":"ancienttotem", "Name_Localised":"Ancient Totem", "Count":3, "Stolen":0 }, { "Name":"drones", "Name_Localised":"Limpet", "Count":10, "Stolen":0 } ] }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;
using ALICE_EventLogic;

namespace ALICE_Events
{
    public class Event_Cargo : Event_Base
    {
        public Event_Cargo()
        {
            Name = "Cargo";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            Process.Cargo((Cargo)GetEvent());

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            Cargo Event = (Cargo)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("Vessel", Event.Vessel.Variable());
            Variable_Craft("Count", Event.Count.Variable());
            //Variable_Craft("Inventory", Event.Inventory.Variable());
            #endregion
        }
    }

    #region Cargo Event
    /// <summary>
    /// Cargo Event is shared between Cargo.Json and the Journal Log.
    /// </summary>
    public class Cargo : Base
    {
        public string Vessel { get; set; }
        public decimal Count { get; set; }
        public List<CargoItem> Inventory { get; set; }

        public Cargo()
        {
            Vessel = Default.String;
            Count = Default.Decimal;
            Inventory = new List<CargoItem>();
        }
    }

    public class CargoItem : Catch
    {
        public string Name { get; set; }
        public string Name_Localised { get; set; }
        public decimal Count { get; set; }
        public decimal Stolen { get; set; }

        public CargoItem()
        {
            Name = Default.String;
            Name_Localised = Default.String;
            Count = Default.Decimal;
            Stolen = Default.Decimal;
        }
    }
    #endregion

}

//Journal Reader Code Chunk.

// else if (EventName == Cargo)
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.Cargo>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }
