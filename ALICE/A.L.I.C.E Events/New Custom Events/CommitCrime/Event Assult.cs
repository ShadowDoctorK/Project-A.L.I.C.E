//Code Generated By: CMDR Shadow Doctor K
//Class File Generated: 02/24/2019 5:24 PM
//Source Journal Line: (Custom A.L.I.C.E Event)
//Reference Journal Line: { "timestamp":"2016-06-10T14:32:03Z", "event":"CommitCrime", "CrimeType":"assault", "Faction":"The Pilots Federation", "Victim":"Potapinski", "Bounty":210 }
//Reference Journal Line: { "timestamp":"2018-11-22T16:58:32Z", "event":"CommitCrime", "CrimeType":"assault", "Faction":"Independent Detention Foundation", "Victim":"The Heart of Orion", "Bounty":300 }

using ALICE_Core;
using ALICE_Internal;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class ASDF_Assult : Base
    {
        public string Violation { get; set; }
        public string Victim { get; set; }
        public string Faction { get; set; }
        public string Charge { get; set; }
        public decimal Amount { get; set; }

        //Default Constructor
        public ASDF_Assult()
        {
            Violation = Str();
            Victim = Str();
            Faction = Str();
            Charge = Str();
            Amount = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class QWER_Assult : Event
    {
        //Construct Custom Event
        public void Construct(CommitCrime Event)
        {
            try
            {
                Assult Temp = new Assult()
                {
                    Event = "Assult",
                    Timestamp = Event.Timestamp,
                    Violation = "Major",
                    Victim = Event.Victim,
                    Faction = Event.Faction,
                    Charge = "Bounty",
                    Amount = Event.Bounty
                };

                Record(Name, Temp);
                Logic();
            }
            catch (Exception ex)
            {
                ExceptionConstruct(Name, ex);
            }
        }

        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (Assult)O;

                Variables.Record(Name + "_Violation", Event.Violation);
                Variables.Record(Name + "_Victim", Event.Victim);
                Variables.Record(Name + "_Faction", Event.Faction);
                Variables.Record(Name + "_Charge", Event.Charge);
                Variables.Record(Name + "_Amount", Event.Amount);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                var Event = (Assult)O;
                var Temp = (StationHostile)Get(IEnums.Events.StationHostile);
                if (Temp == null) { Temp = new StationHostile(); }

                //Audio - Assult
                IStatus.Crime.Response.Assult(
                    Event.Victim,                                       //Victims Information
                    Check.Internal.TriggerEvents(true, ClassName),      //Check Plugin Initialized
                    (Event.Victim != Temp.Station));                    //Check Victim Is Not A Local Station
            }
            catch (Exception ex)
            {
                ExceptionProcess(Name, ex);
            }
        }     
    }
}