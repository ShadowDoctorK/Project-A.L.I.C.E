//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/20/2018 9:56 PM
//Source Journal Line: { "timestamp":"2019-04-25T00:59:57Z", "event":"FSSDiscoveryScan", "Progress":1.000000, "BodyCount":37, "NonBodyCount":25, "SystemName":"Ross 376", "SystemAddress":2557686551234 }

using ALICE_Debug;
using ALICE_Equipment;
using ALICE_Internal;
using ALICE_Objects;
using ALICE_Response;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class FSSDiscoveryScan : Base
    {
        public decimal Progress { get; set; }
        public decimal BodyCount { get; set; }
        public decimal NonBodyCount { get; set; }

        #region 2019.04.23 Update
        public string SystemName { get; set; }
        public decimal SystemAddress { get; set; }
        #endregion

        //Default Constructor
        public FSSDiscoveryScan()
        {
            Progress = Dec();
            BodyCount = Dec();
            NonBodyCount = Dec();
            SystemName = Str();
            SystemAddress = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_FSSDiscoveryScan : Event
    {
        //Event Instance
        public FSSDiscoveryScan I { get; set; } = new FSSDiscoveryScan();

        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                Variables.Record(Name + "_Progress", I.Progress * 100);
                Variables.Record(Name + "_Bodies", I.BodyCount);
                Variables.Record(Name + "_Signals", I.NonBodyCount);
                Variables.Record(Name + "_System", I.SystemName);
                Variables.Record(Name + "_Address", I.SystemAddress);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Logic Preparations
        public override void Prepare(object O)
        {
            try
            {
                //Update Event Instance
                I = (FSSDiscoveryScan)O;
            }
            catch (Exception ex)
            {
                ExceptionPrepare(Name, ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                //New Returns Audio
                IResponse.DiscoveryScanner.NewReturns(
                    I.BodyCount,                                                //Number Of Bodies
                    ICheck.Initialized(ClassName),                              //Check Plugin Initialized
                    (IObjects.SystemCurrent.StellarBodies != I.BodyCount));     //Check For New Returns

                //No New Returns Audio
                IResponse.DiscoveryScanner.NoReturns(
                    ICheck.Initialized(ClassName),                              //Check Plugin Initialized
                    (IObjects.SystemCurrent.StellarBodies == I.BodyCount));     //Check For No New Returns

                //Update Discovery Scanner Settings
                IEquipment.DiscoveryScanner.FirstScan = false;
                IEquipment.DiscoveryScanner.Active = false;

                //Update Current System Object
                IObjects.SystemCurrent.Update_SystemData(I);

                //Extended Logging: Log System Info
                if (PlugIn.ExtendedLogging && ICheck.Initialized(ClassName, false))
                {
                    IObjects.SystemCurrent.Log_SystemBodies();
                }
            }
            catch (Exception ex)
            {
                ExceptionProcess(Name, ex);
            }
        }
    }
}