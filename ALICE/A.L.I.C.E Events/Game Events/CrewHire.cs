//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-26T10:17:57Z", "event":"CrewHire", "Name":"Korey Cannon", "CrewID":234686432, "Faction":"Eureka Mining Co-Operative", "Cost":15000, "CombatRank":0 }

using ALICE_Core;
using ALICE_Debug;
using ALICE_Response;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class CrewHire : Base
    {
        public string Name { get; set; }
        public decimal CrewID { get; set; }
        public string Faction { get; set; }
        public decimal Cost { get; set; }
        public decimal CombatRank { get; set; }

        //Default Constructor
        public CrewHire()
        {
            Name = Str();
            CrewID = Dec();
            Faction = Str();
            Cost = Dec();
            CombatRank = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_CrewHire : Event
    {
        //Event Instance
        public CrewHire I { get; set; } = new CrewHire();

        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                Variables.Record(Name + "_Name", I.Name);
                Variables.Record(Name + "_ID", I.CrewID);
                Variables.Record(Name + "_Faction", I.Faction);
                Variables.Record(Name + "_Cost", I.Cost);
                Variables.Record(Name + "_Rank", I.CombatRank);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Logic Preparations
        public override void Prepare(object O)
        {
            try
            {
                //Update Event Instance
                I = (CrewHire)O;
            }
            catch (Exception ex)
            {
                ExceptionPrepare(Name, ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                //Update Status Object
                IStatus.Crew.Update(I);

                //Active Duty Audio
                IResponse.Crew.Hire(
                    ICheck.Initialized(ClassName));     //Check Log Has Initialized
            }
            catch (Exception ex)
            {
                ExceptionProcess(Name, ex);
            }
        }
    }
}