//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 4:40 PM
//Source Journal Line: { "timestamp":"2018-11-08T10:45:21Z", "event":"EngineerCraft", "Slot":"PowerDistributor", "Module":"int_powerdistributor_size6_class5", "Ingredients":[ { "Name":"industrialfirmware", "Name_Localised":"Cracked Industrial Firmware", "Count":1 }, { "Name":"fedproprietarycomposites", "Name_Localised":"Proprietary Composites", "Count":1 }, { "Name":"militarysupercapacitors", "Name_Localised":"Military Supercapacitors", "Count":1 } ], "Engineer":"The Dweller", "EngineerID":300180, "BlueprintID":128673734, "BlueprintName":"PowerDistributor_HighCapacity", "Level":5, "Quality":0.176000, "Modifiers":[ { "Label":"Integrity", "Value":156.091202, "OriginalValue":124.000000, "LessIsGood":0 }, { "Label":"WeaponsCapacity", "Value":68.434998, "OriginalValue":50.000000, "LessIsGood":0 }, { "Label":"WeaponsRecharge", "Value":4.264000, "OriginalValue":5.200000, "LessIsGood":0 }, { "Label":"EnginesCapacity", "Value":47.904503, "OriginalValue":35.000000, "LessIsGood":0 }, { "Label":"EnginesRecharge", "Value":2.624000, "OriginalValue":3.200000, "LessIsGood":0 }, { "Label":"SystemsCapacity", "Value":47.904503, "OriginalValue":35.000000, "LessIsGood":0 }, { "Label":"SystemsRecharge", "Value":2.624000, "OriginalValue":3.200000, "LessIsGood":0 } ] }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;

namespace ALICE_Events
{
    public class Event_EngineerCraft : Event_Base
    {
        public Event_EngineerCraft()
        {
            Name = "EngineerCraft";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            //Custom Logic Here.

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            EngineerCraft Event = (EngineerCraft)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("Slot", Event.Slot.ToString());
            Variable_Craft("Module", Event.Module.ToString());
            //Variable_Craft("Ingredients", Event.Ingredients.ToString());
            Variable_Craft("Engineer", Event.Engineer.ToString());
            Variable_Craft("EngineerID", Event.EngineerID.ToString());
            Variable_Craft("BlueprintID", Event.BlueprintID.ToString());
            Variable_Craft("BlueprintName", Event.BlueprintName.ToString());
            Variable_Craft("Level", Event.Level.ToString());
            Variable_Craft("Quality", Event.Quality.ToString());
            //Variable_Craft("Modifiers", Event.Modifiers.ToString());
            #endregion
        }
    }
    
    #region EngineerCraft Event
    public class EngineerCraft : Base
    {
        public string Slot { get; set; }
        public string Module { get; set; }
        public string ApplyExperimentalEffect { get; set; }
        public string Engineer { get; set; }
        public decimal EngineerID { get; set; }
        public string BlueprintName { get; set; }
        public decimal BlueprintID { get; set; }
        public decimal Level { get; set; }
        public decimal Quality { get; set; }
        public string ExperimentalEffect { get; set; }
        public string ExperimentalEffect_Localised { get; set; }
        public List<CraftModifier> Modifiers { get; set; }
        public List<CraftIngredient> Ingredients { get; set; }

        public EngineerCraft()
        {
            Slot = Default.String;
            Module = Default.String;
            ApplyExperimentalEffect = Default.String;
            Engineer = Default.String;
            EngineerID = Default.Decimal;
            BlueprintName = Default.String;
            BlueprintID = Default.Decimal;
            Level = Default.Decimal;
            Quality = Default.Decimal;
            ExperimentalEffect = Default.String;
            ExperimentalEffect_Localised = Default.String;
            Modifiers = new List<CraftModifier>();
            Ingredients = new List<CraftIngredient>();
        }

        public class CraftModifier
        {
            public string Label { get; set; }
            public decimal Value { get; set; }
            public decimal OriginalValue { get; set; }
            public decimal LessIsGood { get; set; }
            public string ValueStr { get; set; }
            public string ValueStr_Localised { get; set; }

            public CraftModifier()
            {
                Label = Default.String;
                Value = Default.Decimal;
                OriginalValue = Default.Decimal;
                LessIsGood = Default.Decimal;
                ValueStr = Default.String;
                ValueStr_Localised = Default.String;
            }
        }

        public class CraftIngredient : Catch
        {
            public string Name { get; set; }
            public string Name_Localised { get; set; }
            public decimal Count { get; set; }

            public CraftIngredient()
            {
                Name = Default.String;
                Name_Localised = Default.String;
                Count = Default.Decimal;
            }
        }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == "EngineerCraft")
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.EngineerCraft>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }
