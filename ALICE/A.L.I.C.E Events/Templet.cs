//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-19T03:47:33Z", "event":"Templet", "Type":"Drones", "Count":108, "BuyPrice":101, "TotalCost":10908 }

using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class Templet : Base
    {
        //No Properties

        //Default Constructor
        public Templet()
        {

        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_Templet : Event
    {
        //Custom Event Construction
        public override object Construct(object O)
        {
            try
            {
                var Event = (Templet)O;                
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }

            return null;
        }

        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (Templet)O;

                //Variables.Record(Name + "_Type", Event.Type);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Logic Preparations
        public override void Prepare(object O)
        {
            try
            {
                var Event = (Templet)O;
                //No Preparations
            }
            catch (Exception ex)
            {
                ExceptionPrepare(Name, ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                var Event = (Templet)O;
                //No Logic Process
            }
            catch (Exception ex)
            {
                ExceptionProcess(Name, ex);
            }
        }

        //Plugin Property Aligment
        public override void Alignment(object O)
        {
            try
            {
                var Event = (Templet)O;
                //No Updates
            }
            catch (Exception ex)
            {
                ExceptionAlignment(Name, ex);
            }
        }
    }
}