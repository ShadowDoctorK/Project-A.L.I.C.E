//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 4:40 PM
//Source Journal Line: { "timestamp":"2018-09-16T11:42:22Z", "event":"EngineerContribution", "Engineer":"Elvira Martuuk", "EngineerID":300160, "Type":"Commodity", "Commodity":"soontillrelics", "Commodity_Localised":"Soontill Relics", "Quantity":3, "TotalQuantity":3 }

using ALICE_Core;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class EngineerContribution : Base
    {
        public string Engineer { get; set; }
        public decimal EngineerID { get; set; }
        public string Type { get; set; }
        public string Commodity { get; set; }
        public string Commodity_Localised { get; set; }
        public decimal Quantity { get; set; }
        public decimal TotalQuantity { get; set; }

        //Default Constructor
        public EngineerContribution()
        {
            Engineer = Str();
            EngineerID = Dec();
            Type = Str();
            Commodity = Str();
            Commodity_Localised = Str();
            Quantity = Dec();
            TotalQuantity = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_EngineerContribution : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (EngineerContribution)O;

                Variables.Record(Name + "_Engineer", Event.Engineer);
                Variables.Record(Name + "_ID", Event.EngineerID);
                Variables.Record(Name + "_Type", Event.Type);
                Variables.Record(Name + "_Commodity", Event.Commodity_Localised);
                Variables.Record(Name + "_EDCommodity", Event.Commodity);
                Variables.Record(Name + "_Count", Event.Quantity);
                Variables.Record(Name + "_Total", Event.TotalQuantity);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Property Aligment
        public override void Alignment(object O)
        {
            try
            {
                IStatus.Supercruise = false;
                IStatus.Hyperspace = false;
                IStatus.Touchdown = false;
                IStatus.Docking.Docked = true;
                IStatus.Hardpoints = false;
                IStatus.LandingGear = true;
                IStatus.Fighter.Deployed = false;
            }
            catch (Exception ex)
            {
                ExceptionAlignment(Name, ex);
            }
        }
    }
}