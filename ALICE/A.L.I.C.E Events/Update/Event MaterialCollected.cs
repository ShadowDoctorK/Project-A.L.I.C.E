//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-03T04:15:57Z", "event":"MaterialCollected", "Category":"Manufactured", "Name":"guardian_sentinel_wreckagecomponents", "Name_Localised":"Guardian Wreckage Components", "Count":3 }

using ALICE_Debug;
using ALICE_Status;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class MaterialCollected : Base
    {
        public string Category { get; set; }
        public string Name { get; set; }
        public string Name_Localised { get; set; }
        public decimal Count { get; set; }

        //Default Constructor
        public MaterialCollected()
        {
            Category = Str();
            Name = Str();
            Name_Localised = Str();
            Count = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_MaterialCollected : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (MaterialCollected)O;

                Variables.Record(Name + "_Catagory", Event.Category);
                Variables.Switch(Name + "_Name", Event.Name_Localised, Event.Name);
                Variables.Record(Name + "_Count", Event.Count);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                var Event = (MaterialCollected)O;

                IStatus.Materials.Response.Collected(
                        Event.Name,                                                 //Material
                        ICheck.Initialized(ClassName),                              //Check Plugin Initialized
                        ICheck.Report.MaterialCollected(ClassName, true, true));    //Check Material Reports Enabled 
            }
            catch (Exception ex)
            {
                ExceptionProcess(Name, ex);
            }
        }

        //Plugin Property Aligment
        public override void Alignment(object O)
        {
            try
            {
                IStatus.Hyperspace = false;
            }
            catch (Exception ex)
            {
                ExceptionAlignment(Name, ex);
            }
        }
    }
}