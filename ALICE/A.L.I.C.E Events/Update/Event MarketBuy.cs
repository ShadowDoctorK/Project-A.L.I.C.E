//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-22T00:02:38Z", "event":"MarketBuy", "MarketID":3221644800, "Type":"performanceenhancers", "Type_Localised":"Performance Enhancers", "Count":584, "BuyPrice":6004, "TotalCost":3506336 }

using ALICE_Debug;
using ALICE_Status;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class MarketBuy : Base
    {
        public decimal MarketID { get; set; }
        public string Type { get; set; }
        public string Type_Localised { get; set; }
        public decimal Count { get; set; }
        public decimal BuyPrice { get; set; }
        public decimal TotalCost { get; set; }

        //Default Constructor
        public MarketBuy()
        {
            MarketID = Dec();
            Type = Str();
            Type_Localised = Str();
            Count = Dec();
            BuyPrice = Dec();
            TotalCost = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_MarketBuy : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (MarketBuy)O;

                Variables.Record(Name + "_Market", Event.MarketID);               
                Variables.Switch(Name + "_Item", Event.Type_Localised, Event.Type);
                Variables.Record(Name + "_Count", Event.Count);
                Variables.Record(Name + "_UnitPrice", Event.BuyPrice);
                Variables.Record(Name + "_Credits", Event.TotalCost);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Property Aligment
        public override void Alignment(object O)
        {
            try
            {
                IStatus.Docking.Docked = true;
                ISet.Status.LandingGear(ClassName, true);
                IStatus.Planet.OrbitalMode = false;
                IStatus.Planet.DecentReport = false;
                IStatus.Supercruise = false;
                IStatus.Hyperspace = false;
                IStatus.Touchdown = false;
                IStatus.CargoScoop = false;
                IStatus.Fighter.Deployed = false;
                IStatus.Hardpoints = false;
            }
            catch (Exception ex)
            {
                ExceptionAlignment(Name, ex);
            }
        }
    }
}