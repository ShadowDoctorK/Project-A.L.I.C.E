//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-12T00:57:31Z", "event":"RedeemVoucher", "Type":"bounty", "Amount":3357787, "Factions":[ { "Faction":"Monto Incorporated", "Amount":22668 }, { "Faction":"Traditional HR 8631 Focus", "Amount":81618 }, { "Faction":"Eureka Mining Co-Operative", "Amount":1010758 }, { "Faction":"Archons Wolves", "Amount":66194 }, { "Faction":"Gliese 9106 Partners", "Amount":22021 }, { "Faction":"HR 8631 Power Exchange", "Amount":270348 }, { "Faction":"HIP 70973 Interstellar", "Amount":34098 }, { "Faction":"Wadjalkan League", "Amount":50895 }, { "Faction":"LHS 480 Crimson Natural Group", "Amount":52380 }, { "Faction":"Firenses Netcoms Solutions", "Amount":199220 }, { "Faction":"Natural LP 465-14 Defence Force", "Amount":15525 }, { "Faction":"Green Party of Adityan", "Amount":57735 }, { "Faction":"Official Yuqui Freedom Party", "Amount":9162 }, { "Faction":"Kochole Party", "Amount":305267 }, { "Faction":"Blue Comms Corp.", "Amount":222484 }, { "Faction":"Workers of Firenses for Equality", "Amount":15558 }, { "Faction":"Thieves of Horizon", "Amount":79378 }, { "Faction":"Independent Pilots Armada", "Amount":79155 }, { "Faction":"Nech Kairu United Corporation", "Amount":17796 }, { "Faction":"Alya Allied & Co", "Amount":364504 }, { "Faction":"Crimson Netcoms Partners", "Amount":34806 }, { "Faction":"People's Alya Revolutionary Party", "Amount":117702 }, { "Faction":"BD+06 5034 Bridge Commodities", "Amount":228515 } ], "BrokerPercentage":25.000000 }

using ALICE_Core;
using System;
using System.Collections.Generic;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class RedeemVoucher : Base
    {
        public string Type { get; set; }
        public decimal Amount { get; set; }
        public List<Fact> Factions { get; set; }
        public string Faction { get; set; }
        public decimal BrokerPercentage { get; set; }

        //Default Constructor
        public RedeemVoucher()
        {
            Type = Str();
            Amount = Dec();
            Factions = new List<Fact>();
            Faction = Str();
            BrokerPercentage = Dec();
        }

        public class Fact : Catch
        {
            public string Faction { get; set; }
            public decimal Amount { get; set; }

            public Fact()
            {
                Faction = Str();
                Amount = Dec();
            }
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_RedeemVoucher : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (RedeemVoucher)O;

                if (Variables.Validate(Name + "_Type", Event.Type.FirstCharToUpper(), "Bounty"))
                {
                    int C = 1; foreach (var F in Event.Factions)
                    {
                        Variables.Record(Name + "_Faction" + C, F.Faction);
                        Variables.Record(Name + "_Credits" + C, F.Amount);
                    }
                }
                else
                {
                    Variables.Record(Name + "_Type", Event.Type.FirstCharToUpper());
                    Variables.Record(Name + "_Faction", Event.Faction);
                }

                Variables.Record(Name + "_TotalCredits", Event.Amount);                
                Variables.Record(Name + "_BrokerPercentage", Event.BrokerPercentage);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }
    }
}