//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-11T20:21:58Z", "event":"TechnologyBroker", "BrokerType":"guardian", "MarketID":3223415296, "ItemsUnlocked":[ { "Name":"Int_GuardianFSDBooster_Size1", "Name_Localised":"Guardian FSD Booster" }, { "Name":"Int_GuardianFSDBooster_Size2", "Name_Localised":"$Int_GuardianFSDBooster_Size1_Name;" }, { "Name":"Int_GuardianFSDBooster_Size3", "Name_Localised":"$Int_GuardianFSDBooster_Size1_Name;" }, { "Name":"Int_GuardianFSDBooster_Size4", "Name_Localised":"$Int_GuardianFSDBooster_Size1_Name;" }, { "Name":"Int_GuardianFSDBooster_Size5", "Name_Localised":"$Int_GuardianFSDBooster_Size1_Name;" } ], "Commodities":[ { "Name":"hnshockmount", "Name_Localised":"HN Shock Mount", "Count":8 } ], "Materials":[ { "Name":"guardian_moduleblueprint", "Name_Localised":"Guardian Module Blueprint Segment", "Count":1, "Category":"Encoded" }, { "Name":"guardian_powercell", "Name_Localised":"Guardian Power Cell", "Count":21, "Category":"Manufactured" }, { "Name":"guardian_techcomponent", "Name_Localised":"Guardian Technology Component", "Count":21, "Category":"Manufactured" }, { "Name":"focuscrystals", "Name_Localised":"Focus Crystals", "Count":24, "Category":"Manufactured" } ] }

using System;
using System.Collections.Generic;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class TechnologyBroker : Base
    {
        public string BrokerType { get; set; }
        public decimal MarketID { get; set; }
        public List<ItemUnlock> ItemsUnlocked { get; set; }
        public List<Commodity> Commodities { get; set; }
        public List<Material> Materials { get; set; }

        //Default Constructor
        public TechnologyBroker()
        {
            BrokerType = Str();
            MarketID = Dec();
            ItemsUnlocked = new List<ItemUnlock>();
            Commodities = new List<Commodity>();
            Materials = new List<Material>();
        }

        public class ItemUnlock : Catch
        {
            public string Name { get; set; }
            public string Name_Localised { get; set; }

            public ItemUnlock()
            {
                Name = Str();
                Name_Localised = Str();
            }
        }

        public class Commodity : Catch
        {
            public string Name { get; set; }
            public string Name_Localised { get; set; }
            public decimal Count { get; set; }

            public Commodity()
            {
                Name = Str();
                Name_Localised = Str();
                Count = Dec();
            }
        }

        public class Material : Catch
        {
            public string Name { get; set; }
            public string Name_Localised { get; set; }
            public decimal Count { get; set; }
            public string Category { get; set; }

            public Material()
            {
                Name = Str();
                Name_Localised = Str();
                Count = Dec();
                Category = Str();
            }
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class Event_TechnologyBroker : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (TechnologyBroker)O;

                Variables.Record(Name + "_Market", Event.MarketID);
                Variables.Record(Name + "_Type", Event.BrokerType);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }
    }
}