//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 4:40 PM
//Source Journal Line: { "timestamp":"2018-10-30T23:18:10Z", "event":"SetUserShipName", "Ship":"typex", "ShipID":59, "UserShipName":"Collossus of the fall", "UserShipId":"AG-30T" }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;

namespace ALICE_Events
{
    public class Event_SetUserShipName : Event_Base
    {
        public Event_SetUserShipName()
        {
            Name = "SetUserShipName";
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            IObjects.Logic_SetUserShipName((SetUserShipName)GetEvent());

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            SetUserShipName Event = (SetUserShipName)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("Ship", Event.Ship.ToString());
            Variable_Craft("ShipID", Event.ShipID.ToString());
            Variable_Craft("UserShipName", Event.UserShipName.ToString());
            Variable_Craft("UserShipId", Event.UserShipId.ToString());
            #endregion
        }
    }

    #region SetUserShipName Event
    public class SetUserShipName : Base
    {
        public string Ship { get; set; }
        public decimal ShipID { get; set; }
        public string UserShipName { get; set; }
        public string UserShipId { get; set; }
    }
    #endregion
}

//Journal Reader Code Chunk.

// else if (EventName == "SetUserShipName")
// {
//     var Event = JsonConvert.DeserializeObject<ALICE_Events.SetUserShipName>(RawLine);
//     IEvents.UpdateEvents(EventName, Event);
//     IEvents.Bounty.Logic();
// }
