//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/20/2018 12:20 AM
//Source Journal Line: (Custom A.L.I.C.E Event)
//Reference Journal Line: { "timestamp":"2018-10-11T19:32:41Z", "event":"ReceiveText", "From":"Rayhan al-Biruni Orbital", "Message":"$STATION_NoFireZone_entered;", "Message_Localised":"No fire zone entered.", "Channel":"npc" }
//Reference Journal Line: { "timestamp":"2018-10-11T19:24:25Z", "event":"ReceiveText", "From":"Hennen Station", "Message":"$STATION_NoFireZone_exited;", "Message_Localised":"No fire zone left.", "Channel":"npc" }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;
using ALICE_EventLogic;

namespace ALICE_Events
{
    public class Event_NoFireZone : Event_Base
    {
        public Event_NoFireZone()
        {
            Name = "NoFireZone";

            NoFireZone Temp = new NoFireZone();
            UpdateEvents(Name, Temp);
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            Process.NoFireZone((NoFireZone)GetEvent());

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            NoFireZone Event = (NoFireZone)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("Entered", Event.Entered.ToString());
            Variable_Craft("Weapons", Event.Weapons.ToString());
            Variable_Craft("Station", Event.Station.ToString());
            #endregion
        }

        public void Construct(ReceiveText Event)
        {
            NoFireZone Temp = new NoFireZone()
            {
                Station = Event.From,
                Message = Event.Message
            };

            if (Event.Message.Contains("NoFireZone_entered"))
            { Temp.Entered = true; }
            else if (Event.Message.Contains("NoFireZone_exited"))
            { Temp.Entered = false; }

            UpdateEvents(Name, Temp);
            Logic();
        }

        public void Construct(SupercruiseEntry Event)
        {
            NoFireZone Temp = new NoFireZone()
            {
                Station = "Unknown",
                Weapons = false,
                Entered = false,
                Message = "Supercruise"
            };

            UpdateEvents(Name, Temp);
            Logic();
        }
    }

    #region NoFireZone Event
    public class NoFireZone : Base
    {
        public bool Entered { get; set; }
        public bool Weapons { get; set; }
        public string Station { get; set; }    
        public string Message { get; set; }

        public NoFireZone()
        {
            Entered = false;
            Weapons = false;
            Station = "The Station";
            Message = "None";
        }
    }
    #endregion
}
