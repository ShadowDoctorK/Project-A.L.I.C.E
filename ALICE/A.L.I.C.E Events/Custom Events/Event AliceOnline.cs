//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/20/2018 12:20 AM
//Source Journal Line: (Custom A.L.I.C.E Event)
//Reference Journal Line: { "timestamp":"2016-06-10T14:32:03Z", "event":"CommitCrime", "CrimeType":"assault", "Faction":"The Pilots Federation", "Victim":"Potapinski", "Bounty":210 }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ALICE_Objects;
using ALICE_Internal;
using ALICE_EventLogic;
using ALICE_Interface;

namespace ALICE_Events
{
    public class Event_AliceOnline : Event_Base
    {
        public Event_AliceOnline()
        {
            Name = "AliceOnline";

            AliceOnline Temp = new AliceOnline()
            {
                Interface = IPlatform.Interface,
                Version = "Three Point Four Point Zero"
            };

            UpdateEvents(Name, Temp);
        }

        public void Logic()
        {
            if (IEvents.WriteVariables && WriteVariables)
            {
                try
                {
                    Variables_Clear();
                    Variables_Generate();
                    Variables_Write();
                }
                catch (Exception ex)
                {
                    Logger.Exception(Name, "An Exception Occured While Updating Variables");
                    Logger.Exception(Name, "Exception: " + ex);
                }
            }

            Process.AliceOnline((AliceOnline)GetEvent());

            TriggerEvent();
        }

        public void Variables_Generate()
        {
            AliceOnline Event = (AliceOnline)IEvents.GetEvent(Name);

            Variables.Clear();

            #region Custom Variables

            #endregion

            #region Event Variables
            Variable_Craft("Interface", Event.Interface.ToString());
            Variable_Craft("Version", Event.Version.ToString());
            #endregion
        }
    }

    #region AliceOnline Event
    public class AliceOnline : Base
    {
        public IPlatform.Interfaces Interface { get; set; }
        public string Version { get; set; }
    }
    #endregion
}
