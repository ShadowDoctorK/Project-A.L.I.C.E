//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-14T22:27:55Z", "event":"SupercruiseEntry", "StarSystem":"Col 173 Sector KY-Q d5-47", "SystemAddress":1625603164499 }

using ALICE_Actions;
using ALICE_Core;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class ASDF_SupercruiseEntry : Base
    {
        public string StarSystem { get; set; }
        public decimal SystemAddress { get; set; }

        //Default Constructor
        public ASDF_SupercruiseEntry()
        {           
            StarSystem = Str();
            SystemAddress = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class QWER_SupercruiseEntry : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (SupercruiseEntry)O;
                
                Variables.Record(Name + "_System", Event.StarSystem);
                Variables.Record(Name + "_Address", Event.SystemAddress);                
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                var Event = (SupercruiseEntry)O;

                //Update Status Object
                IStatus.Docking.Update(Event);
            }
            catch (Exception ex)
            {
                ExceptionProcess(Name, ex);
            }
        }

        //Plugin Property Aligment
        public override void Alignment(object O)
        {
            try
            {
                //Exiting Planet Prevents Abort Decent 
                //Report While Leaving The Planet.
                IStatus.Planet.ExitingPlanet = true;

                Call.Panel.MainFourIsFalse();
                IEvents.FireInNoFireZone.FirstReport = true;
                IEquipment.FrameShiftDrive.Reset();
                IStatus.Fighter.Deployed = false;
                IStatus.Supercruise = true;
                IStatus.Hyperspace = false;
                IStatus.Hardpoints = false;
                IStatus.Touchdown = false;
                IStatus.CargoScoop = false;
                IStatus.LandingGear = false;
                IStatus.WeaponSafety = false;
            }
            catch (Exception ex)
            {
                ExceptionAlignment(Name, ex);
            }           
        }
    }
}