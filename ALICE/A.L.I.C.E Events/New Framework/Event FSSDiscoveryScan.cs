//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/20/2018 9:56 PM
//Source Journal Line: { "timestamp":"2018-11-21T02:14:32Z", "event":"FSSDiscoveryScan", "Progress":0.000000, "BodyCount":66, "NonBodyCount":0 }


using ALICE_Core;
using ALICE_Internal;
using ALICE_Objects;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class ASDF_FSSDiscoveryScan : Base
    {
        public decimal Progress { get; set; }
        public decimal BodyCount { get; set; }
        public decimal NonBodyCount { get; set; }

        //Default Constructor
        public ASDF_FSSDiscoveryScan()
        {
            Progress = Dec();
            BodyCount = Dec();
            NonBodyCount = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class QWER_FSSDiscoveryScan : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (FSSDiscoveryScan)O;

                Variables.Record(Name + "_Progress", Event.Progress * 100);
                Variables.Record(Name + "_Bodies", Event.BodyCount);
                Variables.Record(Name + "_Signals", Event.NonBodyCount);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                var Event = (FSSDiscoveryScan)O;

                //New Returns Audio
                IEquipment.DiscoveryScanner.NewReturns(
                    Event.BodyCount,                                                //Number Of Bodies
                    Check.Internal.TriggerEvents(true, ClassName),                  //Check Plugin Initialized
                    (IObjects.SystemCurrent.StellarBodies != Event.BodyCount));     //Check For New Returns

                //No New Returns Audio
                IEquipment.DiscoveryScanner.NoReturns(
                    Check.Internal.TriggerEvents(true, ClassName),                  //Check Plugin Initialized
                    (IObjects.SystemCurrent.StellarBodies == Event.BodyCount));     //Check For No New Returns

                //Update Discovery Scanner Settings
                IEquipment.DiscoveryScanner.FirstScan = false;
                IEquipment.DiscoveryScanner.Active = false;

                //Update Current System Object
                IObjects.SystemCurrent.Update_SystemData(Event);

                //Extended Logging: Log System Info
                if (PlugIn.ExtendedLogging &&
                    Check.Internal.TriggerEvents(true, ClassName, true))
                {
                    IObjects.SystemCurrent.Log_SystemBodies();
                }
            }
            catch (Exception ex)
            {
                ExceptionProcess(Name, ex);
            }
        }
    }
}