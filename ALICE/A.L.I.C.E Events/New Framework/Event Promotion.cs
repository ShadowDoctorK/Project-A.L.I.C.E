//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-22T01:11:07Z", "event":"Promotion", "Trade":7 }

using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class ASDF_Promotion : Base
    {
        public decimal Empire { get; set; }
        public decimal Combat { get; set; }
        public decimal Trade { get; set; }
        public decimal Federation { get; set; }
        public decimal Alliance { get; set; }
        public decimal Independent { get; set; }

        //Default Constructor
        public ASDF_Promotion()
        {
            Empire = Dec();
            Combat = Dec();
            Trade = Dec();
            Federation = Dec();
            Alliance = Dec();
            Independent = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class QWER_Promotion : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (Promotion)O;

                if (Variables.Validate(Name + "_Rank", Event.Empire))
                {
                    Variables.Record(Name + "_Name", "Empire");
                }

                if (Variables.Validate(Name + "_Rank", Event.Combat))
                {
                    Variables.Record(Name + "_Name", "Combat");
                }

                if (Variables.Validate(Name + "_Rank", Event.Trade))
                {
                    Variables.Record(Name + "_Name", "Trade");
                }

                if (Variables.Validate(Name + "_Rank", Event.Federation))
                {
                    Variables.Record(Name + "_Name", "Federation");
                }

                if (Variables.Validate(Name + "_Rank", Event.Alliance))
                {
                    Variables.Record(Name + "_Name", "Alliance");
                }

                if (Variables.Validate(Name + "_Rank", Event.Independent))
                {
                    Variables.Record(Name + "_Name", "Independent");
                }
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }
    }
}
