//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-21T23:45:27Z", "event":"MissionAccepted", "Faction":"Kao Kach Purple Energy PLC", "Name":"Mission_Collect_Industrial", "LocalisedName":"Industry needs 2061 units of Performance Enhancers", "Commodity":"$PerformanceEnhancers_Name;", "Commodity_Localised":"Performance Enhancers", "Count":2061, "DestinationSystem":"HR 8514", "DestinationStation":"Hennen Station", "Expiry":"2018-10-22T23:11:20Z", "Wing":true, "Influence":"Med", "Reputation":"Med", "Reward":14211951, "MissionID":427614351 }

using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class ASDF_MissionAccepted : Base
    {
        public string Faction { get; set; }
        public string Name { get; set; }
        public string LocalisedName { get; set; }
        public string TargetType { get; set; }
        public string TargetType_Localised { get; set; }
        public decimal Donation { get; set; }
        public string Commodity { get; set; }
        public string Commodity_Localised { get; set; }
        public decimal Count { get; set; }
        public string TargetFaction { get; set; }
        public decimal KillCount { get; set; }
        public string DestinationSystem { get; set; }
        public string DestinationStation { get; set; }
        public string Target { get; set; }
        public string Target_Localised { get; set; }
        public DateTime Expiry { get; set; }
        public bool Wing { get; set; }
        public string Influence { get; set; }
        public string Reputation { get; set; }
        public decimal Reward { get; set; }
        public decimal MissionID { get; set; }

        //Default Constructor
        public ASDF_MissionAccepted()
        {
            Faction = Str();
            Name = Str();
            LocalisedName = Str();
            TargetType = Str();
            TargetType_Localised = Str();
            Donation = Dec();
            Commodity = Str();
            Commodity_Localised = Str();
            Count = Dec();
            TargetFaction = Str();
            KillCount = Dec();
            DestinationSystem = Str();
            DestinationStation = Str();
            Target = Str();
            Target_Localised = Str();
            Expiry = Dtg();
            Wing = Bool();
            Influence = Str();
            Reputation = Str();
            Reward = Dec();
            MissionID = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class QWER_MissionAccepted : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (MissionAccepted)O;

                Variables.Record(Name + "_ID", Event.MissionID);
                Variables.Record(Name + "_Faction", Event.Faction);
                Variables.Record(Name + "_Name", Event.LocalisedName);
                Variables.Record(Name + "_Type", Event.Name);
                Variables.Record(Name + "_Donation", Event.Donation);
                Variables.Switch(Name + "_Commodity", Event.Commodity_Localised, Event.Commodity);
                Variables.Record(Name + "_Count", Event.Count);
                Variables.Switch(Name + "_Target", Event.Target_Localised, Event.Target);
                Variables.Switch(Name + "_TargetType", Event.TargetType_Localised, Event.TargetType);
                Variables.Record(Name + "_TargetFaction", Event.TargetFaction);
                Variables.Record(Name + "_KillCount", Event.KillCount);
                Variables.Record(Name + "_DestinationSystem", Event.DestinationSystem);
                Variables.Record(Name + "_DestinationStation", Event.DestinationStation);
                Variables.Record(Name + "_Expiration", Event.Expiry);
                Variables.Record(Name + "_Wing", Event.Wing);
                Variables.Record(Name + "_Influence", Event.Influence);
                Variables.Record(Name + "_Reputation", Event.Reputation);
                Variables.Record(Name + "_Reward", Event.Reward);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(Name, ex);
            }
        }
    }
}