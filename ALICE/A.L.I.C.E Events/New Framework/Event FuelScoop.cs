//Code Generated By Project A.L.I.C.E Developer Toolkit
//Class File Generated: 11/12/2018 1:27 AM
//Source Journal Line: { "timestamp":"2018-10-02T03:46:56Z", "event":"FuelScoop", "Scooped":5.007301, "Total":29.415503 }

using ALICE_Core;
using System;

namespace ALICE_Events
{
    /// <summary>
    /// Object Data Class
    /// </summary>
    public class ASDF_FuelScoop : Base
    {
        public decimal Scooped { get; set; }
        public decimal Total { get; set; }

        //Default Constructor
        public ASDF_FuelScoop()
        {
            Scooped = Dec();
            Total = Dec();
        }
    }

    /// <summary>
    /// Event Logic & Data Storage Class
    /// </summary>
    public class QWER_FuelScoop : Event
    {
        //Variable Generation
        public override void Generate(object O)
        {
            try
            {
                var Event = (FuelScoop)O;

                Variables.Record(Name + "_Scooped", Event.Scooped);
                Variables.Record(Name + "_Total", Event.Total);
            }
            catch (Exception ex)
            {
                ExceptionGenerate(ex);
            }
        }

        //Plugin Logic Process
        public override void Process(object O)
        {
            try
            {
                var Event = (FuelScoop)O;

                //Update Status Object
                IEquipment.FuelTank.Update(Event);
            }
            catch (Exception ex)
            {
                ExceptionProcess(ex);
            }
        }

        //Plugin Property Aligment
        public override void Alignment()
        {
            IStatus.Supercruise = true;
            IStatus.WeaponSafety = false;
            IStatus.Planet.OrbitalMode = false;
            IStatus.Planet.DecentReport = false;
            IStatus.Hyperspace = false;
            IStatus.Touchdown = false;
            IStatus.Docking.Docked = false;
            IStatus.LandingGear = false;
            IStatus.CargoScoop = false;
            IStatus.Fighter.Deployed = false;
            IStatus.Hardpoints = false;
        }
    }
}